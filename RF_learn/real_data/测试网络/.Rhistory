options(CRAN="http://cran.r-project.org");
install.packages("ggplot2")
ss
library(ggplot2);
source("http://bioconductor.org/biocLite.R");
biocLite();
biocLite("knitr");
install.packages("maps");
install.packages("XML");
install.packages("ggmap");
install.packages('ggplot2');
install.packages("ggplot2")
install.packages('mapproj');
install.packages("rattle")
library(rattle)
library (rattle)
install.packages("devtools")
require(devtools)
install_github('rCharts','ramnathv')
library(rCharts)
install.packages("rattle")
library (rattle)
library(rattle)
rattle()
x <-c(1,2,3,4)
x
c(1,2,3,4)+c(3,4,5,6)
c("hello world","I am a r user")
exp(0)
install.packages(igraph)
install.packages("igraph")
library(igraph)
g<-barabasi.game(100,m=1)
plot(g,)
plot(g,vertex.size=4)
install.packages("quantmod")
install.packages("scales")
source("http://bioconductor.org/biocLite.R")；
source("http://bioconductor.org/biocLite.R");
biocLite("Biostrings");
biocLite("ape");
library("Biostrings")
install.packages('seqinr');
install.packages('ape');
library('seqinr')
library('ape')
source("http://bioconductor.org/biocLite.R");
biocLite("Biostrings");
biocLite("BSgenome.Hsapiens.UCSC.hg19");
biocLite("BSgenome.Hsapiens.UCSC.hg19");
biocLite("hgu133a2probe");
source("http://bioconductor.org/biocLite.R");
biocLite("CLL");
biocLite("biomaRt");
biocLite("AnnotationDbi");
biocLite("AnnotationForge");
library(CLL);
data("CLLbatch");
CLLrma<-rma(CLLbatch);
e<-exprs(CLLrma);
e[1:5,1:5]
library(CLL);
data.class(CLLbatch);
data("disease");
disease;
help("AffyBatch");
image(CLLbatch[,1]);
source("http://bioconductor.org/biocLite.R");
biocLite("simpleaffy");
biocLite("affyPLM");
biocLite("RColorBrewer");
biocLite("affy");
biocLite("gcrma");
biocLite("graph");
biocLite("affycoretools");
library(affyPLM);
library(affy);
library(gcrma);
library(affyPLM);
library(RColorBrewer);
library(CLL);
data("CLLbatch")
colors<-brewer.pal(12,"Set3");
CLLrma5<-mas5(CLLbatch);
CLLgcrma<-gcrma(CLLbatch);
hist(CLLbatch,main="original",col=colors);
biocLite("limma");
biocLite("hgu95av2");
library(annotate);
library(XML);
library(GOstats);
biocLite("GOstats");
biocLite("GeneAnswers");
biocLite("pheatmap");
biocLite("Rgraphviz");
biocLite("GEOquery");
biocLite("Biostrings");
biocLite("biomaRt");
biocLite("genefilter");
biocLite("annotate");
biocLite("GOstats");
biocLite("annoPackage");
biocLite("ShortRead");
biocLite("SRAdb");
biocLite("R.utils");
biocLite("Rsamtools");
biocLite("DESeq");
biocLite("edgeR");
source("http://Bioconductor.org/biocLite.R")
#biocLite("GSEABase")
library(ggplot2)
library(Cairo)
library(DOSE)
library(GO.db)
library(org.Hs.eg.db)
library(org.Mm.eg.db)
library(topGO)
library(GSEABase)
library(clusterProfiler)
dictionary="//Users/jiaminsun/Downloads/paper/jiaxinpaper/codeall/DNARF/data/real_data/测试网络"
setwd(dictionary)
dictionary="/Users/jiaminsun/Downloads/paper/jiaxinpaper/codeall/DNARF/data/real_data/测试网络"
setwd(dictionary)
gene_npc1_rgl = read.table("DNARF_result.txt",header = T)
genetrans_npc1_rgl = bitr(gene_npc1_rgl$Entrez,fromType = "SYMBOL",toType = "ENTREZID",OrgDb = "org.Hs.eg.db")
#单组比较
gene_KDS = read.table("DNARF_result.txt",header = T)
genetrans_KDS = bitr(gene_KDS$Entrez,fromType = "SYMBOL",toType = "ENTREZID",OrgDb = "org.Hs.eg.db")
genesKDS = c(genetrans_KDS$ENTREZID)
moduleKDS = c(rep("DNARF",nrow(genetrans_KDS)))
dataKDS = data.frame(moduleKDS,genesKDS)
goresultKDS = compareCluster(genesKDS~moduleKDS,
data = dataKDS,
fun = "enrichGO",
readable = T,
OrgDb = org.Hs.eg.db)
keggresultKDS = compareCluster(genesKDS~moduleKDS,
data = dataKDS,
fun = "enrichKEGG",
organism = 'hsa')
#organism='hsa')
as.data.frame(keggresultKDS)
dotplot(keggresultKDS)
write.csv(goresultKDS@compareClusterResult,"go_DNARF.csv")
write.csv(keggresultKDS@compareClusterResult,"kegg-DNARF.csv")
goresultKDS@compareClusterResult$p.adjust = (goresultKDS@compareClusterResult$p.adjust)
p = dotplot(goresultKDS,showCategory=40)
#ggThemeAssistGadget(p)
pdf("result.pdf",width = 15 ,height = 10)
p + aes(color = pvalue) + aes(size = Count)
#organism='hsa')
as.data.frame(goresultKDS)
dotplot(goresultKDS)
p = dotplot(goresultKDS,showCategory=40)
goresultKDS@compareClusterResult$p.adjust = (goresultKDS@compareClusterResult$p.adjust)
p = dotplot(goresultKDS,showCategory=40)
goresultKDS@compareClusterResult$p.adjust = (goresultKDS@compareClusterResult$p.adjust)
p = dotplot(goresultKDS,showCategory=40)
p + aes(color = pvalue) + aes(size = Count)
dictionary="/Users/jiaminsun/Downloads/paper/jiaxinpaper/codeall/DNARF/data/real_data/测试网络"
setwd(dictionary)
#单组比较
gene_KDS = read.table("DNARF_result.txt",header = T)
genetrans_KDS = bitr(gene_KDS$Entrez,fromType = "SYMBOL",toType = "ENTREZID",OrgDb = "org.Hs.eg.db")
genesKDS = c(genetrans_KDS$ENTREZID)
moduleKDS = c(rep("DNARF",nrow(genetrans_KDS)))
dataKDS = data.frame(moduleKDS,genesKDS)
goresultKDS = compareCluster(genesKDS~moduleKDS,
data = dataKDS,
fun = "enrichGO",
readable = T,
OrgDb = org.Hs.eg.db)
goresultKDS@compareClusterResult$p.adjust = (goresultKDS@compareClusterResult$p.adjust)
p = dotplot(goresultKDS,showCategory=40)
#ggThemeAssistGadget(p)
pdf("result.pdf",width = 15 ,height = 10)
p + aes(color = pvalue) + aes(size = Count)
